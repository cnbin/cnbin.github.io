<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[陈斌彬的技术博客]]></title>
  <link href="http://cnbin.github.io/atom.xml" rel="self"/>
  <link href="http://cnbin.github.io/"/>
  <updated>2016-08-23T10:06:13+08:00</updated>
  <id>http://cnbin.github.io/</id>
  <author>
    <name><![CDATA[陈斌彬]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Webview初始化]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/23/webviewchu-shi-hua/"/>
    <updated>2016-08-23T10:05:19+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/23/webviewchu-shi-hua</id>
    <content type="html"><![CDATA[<!--More-->


<pre><code>//
//  BBPeiZhenFuWuVC.m
//  HangyuHealth
//
//  Created by lwj on 16/8/23.
//  Copyright © 2016年 AntWork. All rights reserved.
//

#import "BBPeiZhenFuWuVC.h"

@interface BBPeiZhenFuWuVC () &lt;UITableViewDataSource, UITableViewDelegate,UIWebViewDelegate&gt;
{
    UITableView *_mTableView;
    UIBarButtonItem *_rightItem;
    BOOL bFirstLoad;
}

@property (strong, nonatomic) UIWebView *webView;
@property WebViewJavascriptBridge* bridge;

@end

@implementation BBPeiZhenFuWuVC

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    self.title = @"陪诊服务";
    [self initTableView];
    [self initUI];

}

- (void) initUI {

    UIButton *rightButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 44, 44)];
    [rightButton setTitle:@"提交" forState:UIControlStateNormal];
    rightButton.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [rightButton setTitleColor:[UIColor colorWithRed:32 / 255.0 green:134 / 255.0 blue:158 / 255.0 alpha:1.0] forState:UIControlStateNormal];
    [rightButton setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
    [rightButton addTarget:self action:@selector(addBind) forControlEvents:UIControlEventTouchUpInside];
    _rightItem = [[UIBarButtonItem alloc] initWithCustomView:rightButton];
}

- (void)addBind {
    [_bridge callHandler:@"save" data:nil];
}

- (void)returnToPreviosView {
    if(_webView.canGoBack){
        [_webView goBack];
    } else{
        [super returnToPreviosView];
    }
}

#pragma mark - UITableViewDelegate

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellIdentifier = [NSString stringWithFormat:@"%@Identify", NSStringFromClass([self class])];
    UITableViewCell *returnCell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if(returnCell == nil)
    {
        returnCell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:cellIdentifier];
    }

    //清除UIWebView的缓存
    [[NSURLCache sharedURLCache] removeAllCachedResponses];
    _webView = [[UIWebView alloc] initWithFrame:self.view.bounds];
    [self.view addSubview:_webView];

    [WebViewJavascriptBridge enableLogging];
    _bridge = [WebViewJavascriptBridge bridgeForWebView:_webView];
    [_bridge setWebViewDelegate:self];
    [_bridge registerHandler:@"finishLoading" handler:^(id data, WVJBResponseCallback responseCallback) {

        [MBProgressHUD hideHUDForView:self.view animated:YES];

    }];
//    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:@"http://www.baidu.com"]]];
    UserDataCenter *udc = [UserDataCenter sharedInstance];
    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://yikangbao.yucanlin.cn:9081/registration/views/query-inventory.html?access_token=%@", udc.userInfo.strAccessToken]]]];
    [returnCell.contentView addSubview:_webView];
    returnCell.selectionStyle = UITableViewCellSelectionStyleNone;
    return returnCell;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    NSInteger num = 1;
    return num;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return _mTableView.frame.size.height;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    CGFloat height = 0.01;
    return height;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *view=[[UIView alloc] init];
    view.backgroundColor = color_ffffff;
    return view;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    CGFloat height = 0.01;
    return height;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    UIView *view=[[UIView alloc] init];
    view.backgroundColor = color_ffffff;
    return view;
}


- (void)initTableView {
    _mTableView = [[TPKeyboardAvoidingTableView alloc] initWithFrame:(CGRect) {0, 0, screenWidth, self.mViewContentHeight}];
    _mTableView.backgroundColor = color_f7f7f9;
    _mTableView.delegate = self;
    _mTableView.dataSource = self;
    _mTableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
    [_mTableView reloadData];
    [self.view addSubview:_mTableView];
}

- (void)webViewDidStartLoad:(UIWebView *)webView {

    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
}

- (void)webViewDidFinishLoad:(UIWebView *)webView {

    [MBProgressHUD hideHUDForView:self.view animated:YES];
    [_bridge callHandler:@"reload" data:nil];
}

- (void)webView:(UIWebView *)webView didFailLoadWithError:(nullable NSError *)error {
    [MBProgressHUD showHUD:self text:[error localizedDescription]];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

@end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[统计整个Xcode工程代码行数]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/22/tong-ji-zheng-ge-xcodegong-cheng-dai-ma-xing-shu/"/>
    <updated>2016-08-22T09:27:11+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/22/tong-ji-zheng-ge-xcodegong-cheng-dai-ma-xing-shu</id>
    <content type="html"><![CDATA[<!--More-->


<p>打开终端，用cd命令 定位到工程所在的目录，然后调用以下命名即可把每个源代码文件行数及总数统计出来：</p>

<pre><code>find . "(" -name "*.m" -or -name "*.mm" -or -name "*.cpp" -or -name "*.h" -or -name "*.rss" ")" -print | xargs wc -l
</code></pre>

<p>其中，-name  &ldquo;*.m&rdquo; 就表示扩展名为.m的文件。同时要统计java文件和xml文件的命令分别是：</p>

<pre><code>find . "(" -name "*.java"  ")" -print | xargs wc -l

find . "(" -name "*.xml"  ")" -print | xargs wc -l
</code></pre>

<p>参考：</p>

<p><a href="http://blog.csdn.net/studyrecord/article/details/7633365">http://blog.csdn.net/studyrecord/article/details/7633365</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ionic 自定义services文件]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/22/ionic-zi-ding-yi-serviceswen-jian/"/>
    <updated>2016-08-22T07:45:06+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/22/ionic-zi-ding-yi-serviceswen-jian</id>
    <content type="html"><![CDATA[<!--More-->


<h3>1.创建cbbservices.js文件</h3>

<p><img src="http://ww4.sinaimg.cn/mw690/78f9859egw1f726kp5f6kj20b30j040i.jpg" alt="img" /></p>

<p><img src="http://ww2.sinaimg.cn/mw690/78f9859egw1f726knt3xoj20k209ewg2.jpg" alt="img" /></p>

<h3>2.声明添加到app.js中</h3>

<p><img src="http://ww4.sinaimg.cn/mw690/78f9859egw1f726kokdtsj20t20f87aq.jpg" alt="img" /></p>

<h3>3.添加到index.html文件中</h3>

<p><img src="http://ww2.sinaimg.cn/mw690/78f9859egw1f726ko22xxj20qe0ecwke.jpg" alt="img" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS开发小记：带输入框（TextField）的UIAlertView]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/19/ioskai-fa-xiao-ji-dai-shu-ru-kuang-(textfield)de-uialertview/"/>
    <updated>2016-08-19T11:07:32+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/19/ioskai-fa-xiao-ji-dai-shu-ru-kuang-(textfield)de-uialertview</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Uilabel指定位置改变字体颜色]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/19/uilabelzhi-ding-wei-zhi-gai-bian-zi-ti-yan-se/"/>
    <updated>2016-08-19T10:41:55+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/19/uilabelzhi-ding-wei-zhi-gai-bian-zi-ti-yan-se</id>
    <content type="html"><![CDATA[<!--More-->


<pre><code>UILabel *myLabel = [[UILabel alloc]initWithFrame:CGRectMake(15, 60, 250, 30)];
[self.view addSubview:myLabel];
//这是我们的测试用的文本字符串数据
NSString *content = @"abc123a1b2c3你懂得888";
NSMutableAttributedString *attributeString  = [[NSMutableAttributedString alloc]initWithString:content];
[attributeString setAttributes:@{NSForegroundColorAttributeName:[UIColor blueColor],NSFontAttributeName:[UIFont systemFontOfSize:25]} range:NSMakeRange(0, 10)];
myLabel.attributedText = attributeString;
</code></pre>

<h3>Resource Reference</h3>

<ul>
<li><a href="http://blog.csdn.net/msyqmsyq/article/details/50788003">http://blog.csdn.net/msyqmsyq/article/details/50788003</a></li>
<li><a href="http://www.cnblogs.com/taintain1984/p/3550525.html">http://www.cnblogs.com/taintain1984/p/3550525.html</a></li>
<li><a href="http://www.isaced.com/post-184.html">http://www.isaced.com/post-184.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cordova调试工具Debug]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/19/cordovadiao-shi-gong-ju-debug/"/>
    <updated>2016-08-19T09:22:07+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/19/cordovadiao-shi-gong-ju-debug</id>
    <content type="html"><![CDATA[<!--More-->


<h3><a href="http://rensanning.iteye.com/blog/2018417">http://rensanning.iteye.com/blog/2018417</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cordova 添加plugin]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/19/cordova-tian-jia-plugin/"/>
    <updated>2016-08-19T09:14:10+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/19/cordova-tian-jia-plugin</id>
    <content type="html"><![CDATA[<!--More-->


<h3><a href="http://cordova.apache.org/plugins/">http://cordova.apache.org/plugins/</a></h3>

<h3><a href="https://www.npmjs.com/package/cordova-plugin-progress">https://www.npmjs.com/package/cordova-plugin-progress</a></h3>

<h3><a href="https://github.com/apache?page=3&amp;query=cordova&amp;utf8=%E2%9C%93">https://github.com/apache?page=3&amp;query=cordova&amp;utf8=%E2%9C%93</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ngCordova-demo]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/19/ngcordova-demo/"/>
    <updated>2016-08-19T07:57:56+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/19/ngcordova-demo</id>
    <content type="html"><![CDATA[<!--More-->


<p><img src="http://ww4.sinaimg.cn/mw690/78f9859egw1f6yqame8igj208m0i40vj.jpg" alt="img" /></p>

<p><img src="http://ww4.sinaimg.cn/mw690/78f9859egw1f6yqam996pj20o20hf7ac.jpg" alt="img" /></p>

<p><img src="http://ww1.sinaimg.cn/mw690/78f9859egw1f6yqam17msj20te0bvgr0.jpg" alt="img" /></p>

<p><img src="http://ww1.sinaimg.cn/mw690/78f9859egw1f6yqalarpfj20n90cfdjr.jpg" alt="img" /></p>

<p><img src="http://ww2.sinaimg.cn/mw690/78f9859egw1f6yqcktwjdj20ku112gnj.jpg" alt="img" /></p>

<p><img src="http://ww1.sinaimg.cn/mw690/78f9859egw1f6yqk89kb7j20ku11276h.jpg" alt="img" /></p>

<p><img src="http://ww3.sinaimg.cn/mw690/78f9859egw1f6yqk8ds8jj20ku112js8.jpg" alt="img" /></p>

<p><img src="http://ww3.sinaimg.cn/mw690/78f9859egw1f6yqk8fs25j20ku112gmb.jpg" alt="img" /></p>

<h3>dialogs</h3>

<pre><code>.controller('DashCtrl', function($scope, $cordovaDialogs) {

   $cordovaDialogs.alert('message', 'title', 'button name')
    .then(function() {
      // callback success
    });

  $cordovaDialogs.confirm('message', 'title', ['button 1','button 2'])
    .then(function(buttonIndex) {
      // no button = 0, 'OK' = 1, 'Cancel' = 2
      var btnIndex = buttonIndex;
    });

  $cordovaDialogs.prompt('msg', 'title', ['btn 1','btn 2'], 'default text')
    .then(function(result) {
      var input = result.input1;
      // no button = 0, 'OK' = 1, 'Cancel' = 2
      var btnIndex = result.buttonIndex;
    });

  // beep 3 times
  $cordovaDialogs.beep(3);

})
</code></pre>

<h3>actionsheet</h3>

<pre><code>  .controller('DashCtrl', function($ionicPlatform, $scope, $cordovaActionSheet) {
    $ionicPlatform.ready(function() {

      var options = {
        title: '你要做什么?',
        buttonLabels: ['分享到陈斌彬的技术博客', '分享到朋友圈'],
        addCancelButtonWithLabel: '取消',
        androidEnableCancelButton: true,
        winphoneEnableCancelButton: true,
        addDestructiveButtonWithLabel: '删除这个'
      };

      $scope.showToast = function() {

        // $cordovaToast.show(uuid, 'long', 'center');
        $cordovaActionSheet.show(options)
            .then(function(btnIndex) {
              var index = btnIndex;
            });
     }


 });

})
</code></pre>

<h3>toast</h3>

<pre><code>  .controller('DashCtrl', function($ionicPlatform, $scope, $cordovaToast) {
    $ionicPlatform.ready(function() {
      $cordovaToast.showShortTop('Hello World!!');

      $scope.showToast = function() {
        $cordovaToast
            .show('You clicked a button!!', 'long', 'center');
      }
    });
  })
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With ngCordova]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/18/getting-started-with-ngcordova/"/>
    <updated>2016-08-18T07:14:12+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/18/getting-started-with-ngcordova</id>
    <content type="html"><![CDATA[<!--More-->


<h3><a href="http://thejackalofjavascript.com/getting-started-with-ngcordova/">http://thejackalofjavascript.com/getting-started-with-ngcordova/</a></h3>

<h3><a href="https://www.npmjs.com/package/xenious-cordova-plugin-x-toast">https://www.npmjs.com/package/xenious-cordova-plugin-x-toast</a></h3>

<h3><a href="http://ngcordova.com/docs/plugins/device/">http://ngcordova.com/docs/plugins/device/</a></h3>

<h3><a href="http://www.ionic-china.com/ngCordova/Flashlight.html">http://www.ionic-china.com/ngCordova/Flashlight.html</a></h3>

<h3><a href="http://www.phonegapcn.com/camera">http://www.phonegapcn.com/camera</a></h3>

<h3><a href="http://cordova.apache.org/announcements/2015/12/08/cordova-ios-4.0.0.html">http://cordova.apache.org/announcements/2015/12/08/cordova-ios-4.0.0.html</a></h3>

<h3><a href="http://www.haomou.net/2015/01/05/2015_ionic_ngCordova/">http://www.haomou.net/2015/01/05/2015_ionic_ngCordova/</a></h3>

<h3><a href="https://www.npmjs.com/package/cordova-plugin-flashlight">https://www.npmjs.com/package/cordova-plugin-flashlight</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cordova]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/17/cordova/"/>
    <updated>2016-08-17T19:48:05+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/17/cordova</id>
    <content type="html"><![CDATA[<!--More-->


<pre><code>npm install -g cordova
cd my_project
cordova platform update ios@4.0.0
</code></pre>

<h3>Resource Reference</h3>

<ul>
<li><a href="http://cordova.apache.org/announcements/2015/12/08/cordova-ios-4.0.0.html">http://cordova.apache.org/announcements/2015/12/08/cordova-ios-4.0.0.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 插件]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/16/xcode-cha-jian/"/>
    <updated>2016-08-16T06:58:29+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/16/xcode-cha-jian</id>
    <content type="html"><![CDATA[<!--More-->


<p>MLAutoReplace <a href="https://github.com/molon/MLAutoReplace">https://github.com/molon/MLAutoReplace</a></p>

<p>Auto-Importer-for-Xcode <a href="https://github.com/citrusbyte/Auto-Importer-for-Xcode">https://github.com/citrusbyte/Auto-Importer-for-Xcode</a></p>

<p>Cichlid <a href="https://github.com/dealforest/Cichlid">https://github.com/dealforest/Cichlid</a></p>

<p>CleanHeaders-Xcode <a href="https://github.com/insanoid/CleanHeaders-Xcode">https://github.com/insanoid/CleanHeaders-Xcode</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[项目适配iOS9遇到的一些问题及解决办法（更新两个小问题）]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/15/xiang-mu-gua-pei-ios9yu-dao-de-xie-wen-ti-ji-jie-jue-ban-fa-geng-xin-liang-ge-xiao-wen-ti/"/>
    <updated>2016-08-15T08:57:28+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/15/xiang-mu-gua-pei-ios9yu-dao-de-xie-wen-ti-ji-jie-jue-ban-fa-geng-xin-liang-ge-xiao-wen-ti</id>
    <content type="html"><![CDATA[<!--More-->


<h3><a href="http://www.jianshu.com/p/631bd7f12a38">http://www.jianshu.com/p/631bd7f12a38</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ios与web交互]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/11/iosyu-webjiao-hu/"/>
    <updated>2016-08-11T14:48:11+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/11/iosyu-webjiao-hu</id>
    <content type="html"><![CDATA[<!--More-->


<p>web html文件加上scipt</p>

<pre><code> &lt;script&gt;
            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=
            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;
            e=o.createElement(i);r=o.getElementsByTagName(i)[0];
            e.src='https://www.google-analytics.com/analytics.js';
            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));
            ga('create','UA-XXXXX-X','auto');ga('send','pageview');
        &lt;/script&gt;
        &lt;script&gt;

            function pushSubViewController () {
                setupWebViewJavascriptBridge(function(bridge) {
                    bridge.callHandler('push',
                        {
                            'detailID': '斌彬哥哥',
                            'actionName':'push'
                        },
                        function responseCallback(responseData) {
                            console.log("JS received response:", responseData)
                        })
                })
            }

        &lt;/script&gt;
        &lt;script&gt;
            //        init JS  //固定写法
            window.onerror = function(err) {
                log('window.onerror: ' + err)
            }

            function setupWebViewJavascriptBridge(callback) {
                if (window.WebViewJavascriptBridge) { return callback(WebViewJavascriptBridge); }
                if (window.WVJBCallbacks) { return window.WVJBCallbacks.push(callback); }
                window.WVJBCallbacks = [callback];
                var WVJBIframe = document.createElement('iframe');
                WVJBIframe.style.display = 'none';
                WVJBIframe.src = 'wvjbscheme://__BRIDGE_LOADED__';
                document.documentElement.appendChild(WVJBIframe);
                setTimeout(function() { document.documentElement.removeChild(WVJBIframe) }, 0)
            }
        &lt;/script&gt;

            &lt;p&gt;3.跳转到某些子界面&lt;/p&gt;
        &lt;button id="push" onclick="pushSubViewController()"&gt;pushSubViewController&lt;/button&gt;
</code></pre>

<p>ios端导入</p>

<p><img src="http://ww2.sinaimg.cn/mw690/78f9859egw1f6pt4darjoj207706saaz.jpg" alt="img" /></p>

<p>导入</p>

<pre><code>#import "WebViewJavascriptBridge.h"
#import "HybirdUrlHandler.h"
#import "HyBridBridge.h"
</code></pre>

<p>添加</p>

<pre><code>@property WebViewJavascriptBridge *bridge;
@property (strong, nonatomic) HyBridBridge *hybridBridge;
</code></pre>

<p>使用</p>

<pre><code>[webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://localhost:8080/src/"]]]];

//http://localhost:8080/src/
//http://ionic-person-6e53.coding.io/
_bridge = [WebViewJavascriptBridge bridgeForWebView:webView];
[self.hybridBridge registerHybridUrlHanlder:self andBridge:self.bridge];
</code></pre>

<p>回调</p>

<pre><code>//懒加载
- (HyBridBridge *)hybridBridge {
    if (!_hybridBridge) {
        _hybridBridge = [[HyBridBridge alloc] init];
    }
    return _hybridBridge;
}

- (NSArray *)actionNames {  //定义可支持的方法名称
    return @[@"push"];
}

//HTML 部分 需要定义 方法名称
//传参的时候 带上方法名字  我这里写的是actionName
- (BOOL)handleDictionAry:(NSDictionary *)dictionary callback:(HybridCallbackBlock)callbackBlock {
    NSString *actionTag = dictionary[@"actionName"];

    if ([actionTag isEqualToString:@"push"]) {

        NSString *detailID = dictionary[@"detailID"];
        NSLog(@"detailID is %@",detailID);
        NSLog(@"push view controller");
        BBZhiFuViewController *vc = [[BBZhiFuViewController alloc]init];
        vc.detailID = detailID;
        [self.navigationController pushViewController:vc animated:YES];
        return YES;
    }
    return NO;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ionic上传 Www]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/11/ionishang-chuan-www/"/>
    <updated>2016-08-11T14:39:13+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/11/ionishang-chuan-www</id>
    <content type="html"><![CDATA[<!--More-->


<p>ionic框架可以直接上传www文件夹，不使用cordova内容</p>

<pre><code>/usr/local/Cellar/tomcat/8.5.4/
</code></pre>

<p><img src="http://ww2.sinaimg.cn/mw690/78f9859egw1f6psxelzexj20cq0a2gmy.jpg" alt="img" /></p>

<p><img src="http://ww4.sinaimg.cn/mw690/78f9859egw1f6psxdtlg8j209u09yq3m.jpg" alt="img" />
执行命令</p>

<pre><code>catalina run
</code></pre>

<p><img src="http://ww1.sinaimg.cn/mw690/78f9859egw1f6pszmzwafj20tu06wwgy.jpg" alt="img" /></p>

<p><img src="http://ww4.sinaimg.cn/mw690/78f9859egw1f6pszmasofj20r00htdjb.jpg" alt="img" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何为Swift进行宏定义]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/10/ru-he-wei-swiftjin-xing-hong-ding-yi/"/>
    <updated>2016-08-10T07:50:39+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/10/ru-he-wei-swiftjin-xing-hong-ding-yi</id>
    <content type="html"><![CDATA[<!--More-->


<ul>
<li><a href="http://www.cnblogs.com/JianweiWang/p/5142306.html">http://www.cnblogs.com/JianweiWang/p/5142306.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oc 调用 Swift（原创）]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/10/oc-diao-yong-swift/"/>
    <updated>2016-08-10T07:06:09+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/10/oc-diao-yong-swift</id>
    <content type="html"><![CDATA[<!--More-->


<p>OC调用Swift的时候，Xcode会自动生成一个xxx-Swfit.h文件。只需要导入这个文件到项目里面就行了。</p>

<p>执行命令：</p>

<pre><code>~find ~/Library/Developer/Xcode/DerivedData -name "*Swift.h"
</code></pre>

<p>找到所有出现的xxx-Swift.h文件，找到项目的xxx-Swift.h文件.然后<code>#import xxx-Swfit.h</code></p>

<p><img src="http://ww1.sinaimg.cn/mw690/78f9859egw1f6oag7lxkyj21da09kk80.jpg" alt="img" /></p>

<p><img src="http://ww3.sinaimg.cn/mw690/78f9859egw1f6oag6v0zlj20hm0be42i.jpg" alt="img" /></p>

<h3>Resource Reference</h3>

<ul>
<li><a href="http://blog.csdn.net/huangchentao/article/details/35278663">http://blog.csdn.net/huangchentao/article/details/35278663</a></li>
<li><a href="http://www.th7.cn/Program/IOS/201501/377155.shtml">http://www.th7.cn/Program/IOS/201501/377155.shtml</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OC与swift相互调用]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/09/ocyu-swiftxiang-hu-diao-yong/"/>
    <updated>2016-08-09T14:47:51+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/09/ocyu-swiftxiang-hu-diao-yong</id>
    <content type="html"><![CDATA[<!--More-->


<p>一、OC调用swift文件</p>

<p>二、swift调用OC文件</p>

<p>三、注意和总结</p>

<p>添加：</p>

<p>四、自定义桥接文件</p>

<p>一、OC调用swift文件</p>

<p>在OC项目中创建一个swift文件的时候，Xcode 会提示 需要创建一个桥接文件，点确定创建桥接文件，Xcode会自动创建一个桥接文件</p>

<p>名字：工程名-Bridging-Header.h</p>

<p>这个桥接文件是 swift 调用OC文件的时候用的</p>

<p>1、
进入TARGETS ->Build Settings -> Packaging 中</p>

<p>设置Defines Module为YES</p>

<p>设置 Product Module Name ，也可以不设置，默认为工程的名字。这个在后面会用到</p>

<p>2、
在swift写一个类</p>

<p>注意这个类一定要继承NSObject，不然在OC中没法用</p>

<p>class hello: NSObject {</p>

<pre><code>var address : String
var gender: String

init(address:String,gender:String){
    self.address = address
    self.gender = gender
}

func method() {
    print("message \(self.address + self.gender)")
}
}
</code></pre>

<p>3、
　　在OC需要用到的swift文件中 导入文件 &ldquo;Product Module Name -Swift.h&rdquo;  因为 Product Module Name 默认是工程的名字</p>

<p>所以直接导入 #import &ldquo;工程名-Swift.h&rdquo;</p>

<p>4、
　　记着写完先command +B编译一下，如果没有报错就可以在OC文件调用swift中的类了</p>

<p>hello *helloss = [[helloalloc]initWithAddress:@&ldquo;上海"gender:@"男&rdquo;];
[helloss method];</p>

<p>二、swift调用OC文件
　　在swift项目中创建一个OC文件的时候，Xcode 会提示创建一个桥接文件 点确定创建桥接文件，Xcode会自动创建一个桥接文件</p>

<p>名字：工程名-Bridging-Header.h</p>

<p>　　把swift需要用到的OC文件的头文件放到桥接文件里 工程名-Bridging-Header.h</p>

<p>例如：</p>

<p>1、
这个就是一个OC文件</p>

<pre><code>//#import "sec.h"
#import &lt;UIKit/UIKit.h&gt;
@interface sec : UIViewController
-(void)actionMake;
@end
</code></pre>

<p>2、
在桥接文件中把需要用到OC的头文件导入进去</p>

<pre><code>#import "sec.h"
</code></pre>

<p>3、
编译一下，就可以在swift中用swift的语法调用OC文件的方法了</p>

<pre><code>let second = sec()
second.actionMake()
</code></pre>

<p>三、注意和总结</p>

<p>注意：
1、OC项目在导入swift文件前 先按照系统提示创建桥接文件，</p>

<p>2、在 targets -> Build Settings -> Packaging  中设置Defines Module 为YES</p>

<p>3、在OC中调用swift文件的时候，swift中的类 要继承NSObject</p>

<p>不然没办法在OC中调用</p>

<p>4、OC中调用swift文件需要导入”工程名 -Swift.h"</p>

<p>（这个是build Setting -> Packaging->Product Module Name 的名字，而这个属性默认是工程的名字）</p>

<p>5、写完记得command + B 编译 一下</p>

<p>6、swift项目 引用OC文件也需要创建 桥接文件，在这个桥接文件中导入OC文件的头文件</p>

<p>7、桥接文件只有一个，作用只是为了 swift 引用OC文件，OC引用swift 文件虽然也需要创建桥接文件
        但是不需要在桥接文件中 导入swift文件</p>

<p>8、如果一个项目既有OC引用swift 也有swift引用OC ,就先设置OC调用swift文件
     在桥接文件 导入OC文件，OC可以定义PCH文件导入”工程名 -Swift.h"</p>

<p>四、自定义桥接文件</p>

<p>如果不用Xcode提示创建桥接文件也可以自定义一个桥接文件</p>

<p>1  使用 Header File  把里面的内容清空。</p>

<p>2、 这文件名可以自定义， 一般还是用 工程名-Bridging-Header.h   例如app - file.h</p>

<p>3    然后在 Build Setting -> Swift Compiler - Code Generation中</p>

<p>4、设置Objective-C Bridging Header 为自定义的桥接文件相对于工程的绝对路径，也就是项目总文件夹的路径，如果在第一层，就直接写自定义的桥接文件的名file.h，如果在下一层，文件夹/桥接文件 app/file.h</p>

<h3>Resource Reference</h3>

<ul>
<li><a href="http://www.cnblogs.com/mazhiqiang/p/5557002.html">http://www.cnblogs.com/mazhiqiang/p/5557002.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ionic/cordova 真机调试]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/09/ionic-slash-cordova-zhen-ji-diao-shi/"/>
    <updated>2016-08-09T11:24:36+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/09/ionic-slash-cordova-zhen-ji-diao-shi</id>
    <content type="html"><![CDATA[<!--More-->


<p>android下简单，连接手机后，直接：</p>

<pre><code>﻿​$ ionic run android
</code></pre>

<p>ios下比较麻烦点，要先装ios-deploy：</p>

<pre><code>﻿​sudo npm install -g ios-deploy
</code></pre>

<p>然后：</p>

<pre><code>﻿​ionic run ios --device
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ionic项目实例《Ionic中文社区》]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/09/ionicxiang-mu-shi-li-oniczhong-wen-she-qu/"/>
    <updated>2016-08-09T11:22:03+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/09/ionicxiang-mu-shi-li-oniczhong-wen-she-qu</id>
    <content type="html"><![CDATA[<!--More-->


<h3><a href="http://www.cnblogs.com/zxj159/p/4788703.html">http://www.cnblogs.com/zxj159/p/4788703.html</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tomcat的Manager显示403 Access Denied]]></title>
    <link href="http://cnbin.github.io/blog/2016/08/09/tomcatde-managerxian-shi-403-access-denied/"/>
    <updated>2016-08-09T10:25:16+08:00</updated>
    <id>http://cnbin.github.io/blog/2016/08/09/tomcatde-managerxian-shi-403-access-denied</id>
    <content type="html"><![CDATA[<!--More-->


<p>管理tomcat的时候遇到了以下问题：</p>

<p>1.刚开始需要用户名密码，不知道用户名和密码是什么，但是输入什么都不正确。</p>

<p>解决办法：</p>

<p>自己在tomcat-users.xml中按格式添加用户 conf文件夹里面</p>

<p>默认是注释掉了的，这主要是考虑到服务器的安全，如果是本地测试，去掉以下这段注释，然后重启动服务器，再输入</p>

<pre><code>&lt;role rolename="tomcat"/&gt;
&lt;role rolename="role1"/&gt;
&lt;user username="tomcat" password="tomcat" roles="tomcat"/&gt;
&lt;user username="both" password="tomcat" roles="tomcat,role1"/&gt;
&lt;user username="role1" password="tomcat" roles="role1"/&gt;
</code></pre>

<p>　　<br/>
　　用户和密码都一目了然了。</p>

<p>2.进入manager界面之后，显示的是403 Access Denied。</p>

<p>解决办法：</p>

<p>在conf/tomcat-users.xml文件中看到这么一段话：</p>

<p>NOTE:  By default, no user is included in the &ldquo;manager-gui&rdquo; role required
to operate the &ldquo;/manager/html&rdquo; web application.  If you wish to use this app,
you must define such a user - the username and password are arbitrary.</p>

<p>也就是说，为了考虑安全，tomcat默认还是没有manager-gui的管理权限的，如果想要使用manager
的话，需要自行加入管理权限（角色）。</p>

<p>需要加一个这样的权限（角色)</p>

<pre><code>&lt;role rolename="manager-gui"/&gt;
</code></pre>

<p>然后再加到需要的用户名中去</p>

<pre><code>&lt;user username="tomcat" password="tomcat" roles="tomcat,manager-gui"/&gt;
　　这样OK了。

&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--&gt;
&lt;tomcat-users&gt;
&lt;!--
NOTE:  By default, no user is included in the "manager-gui" role required
to operate the "/manager/html" web application.  If you wish to use this app,
you must define such a user - the username and password are arbitrary.
--&gt;
&lt;!--
NOTE:  The sample user and role entries below are wrapped in a comment
and thus are ignored when reading this file. Do not forget to remove
&lt;!.. ..&gt; that surrounds them.
--&gt;

&lt;!--
&lt;role rolename="tomcat"/&gt;
&lt;role rolename="role1"/&gt;
&lt;user username="tomcat" password="tomcat" roles="tomcat"/&gt;
&lt;user username="both" password="tomcat" roles="tomcat,role1"/&gt;
&lt;user username="role1" password="tomcat" roles="role1"/&gt;
--&gt;
&lt;role rolename="manager-gui"/&gt;
&lt;role rolename="admin-gui"/&gt;
&lt;user username="ming" password="064417" roles="manager-gui,admin-gui"/&gt;

&lt;/tomcat-users&gt;
</code></pre>

<h3>Resource Reference</h3>

<ul>
<li><a href="http://www.cnblogs.com/mingforyou/archive/2013/03/31/2991543.html">http://www.cnblogs.com/mingforyou/archive/2013/03/31/2991543.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
